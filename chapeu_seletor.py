import streamlit as st
import time

# --- CONFIGURA√á√ÉO DA P√ÅGINA ---
st.set_page_config(
    page_title="Chap√©u Seletor de Hogwarts",
    page_icon="üßô‚Äç‚ôÇÔ∏è",
    layout="centered"
)

# --- ESTRUTURA DE DADOS DAS PERGUNTAS ---
# Organizar as perguntas desta forma torna o c√≥digo muito mais limpo.
perguntas = [
    {
        "pergunta": "Qual qualidade voc√™ mais valoriza em si mesmo?",
        "opcoes": ("Coragem", "Ambi√ß√£o", "Sabedoria", "Lealdade"),
        "pontos": {
            "Coragem": {"Grifin√≥ria": 2},
            "Ambi√ß√£o": {"Sonserina": 2},
            "Sabedoria": {"Corvinal": 2},
            "Lealdade": {"Lufa-Lufa": 2}
        }
    },
    {
        "pergunta": "Se pudesse explorar qualquer lugar em Hogwarts, qual seria?",
        "opcoes": ("A Floresta Proibida", "A Se√ß√£o Restrita da biblioteca", "As cozinhas de Hogwarts", "A Sala Precisa"),
        "pontos": {
            "A Floresta Proibida": {"Grifin√≥ria": 2, "Sonserina": 1},
            "A Se√ß√£o Restrita da biblioteca": {"Corvinal": 2, "Sonserina": 1},
            "As cozinhas de Hogwarts": {"Lufa-Lufa": 2},
            "A Sala Precisa": {"Grifin√≥ria": 1, "Corvinal": 1, "Lufa-Lufa": 1}
        }
    },
    {
        "pergunta": "Qual dos seguintes voc√™ preferiria que as pessoas associassem a voc√™ ap√≥s sua morte?",
        "opcoes": ("Gl√≥ria", "Sabedoria", "Amor", "Poder"),
        "pontos": {
            "Gl√≥ria": {"Grifin√≥ria": 1, "Sonserina": 2},
            "Sabedoria": {"Corvinal": 2},
            "Amor": {"Lufa-Lufa": 2, "Grifin√≥ria": 1},
            "Poder": {"Sonserina": 2}
        }
    },
     {
        "pergunta": "Voc√™ encontra uma carteira perdida na rua. O que voc√™ faz?",
        "opcoes": ("Procura uma identifica√ß√£o para devolver ao dono.", "Leva a uma autoridade, como a pol√≠cia.", "Pega o dinheiro e deixa a carteira.", "Ignora e segue seu caminho."),
        "pontos": {
            "Procura uma identifica√ß√£o para devolver ao dono.": {"Lufa-Lufa": 2, "Grifin√≥ria": 1},
            "Leva a uma autoridade, como a pol√≠cia.": {"Corvinal": 2, "Lufa-Lufa": 1},
            "Pega o dinheiro e deixa a carteira.": {"Sonserina": 2},
            "Ignora e segue seu caminho.": {} # Sem pontos
        }
    }
]

# --- FUN√á√ïES AUXILIARES ---
def exibir_resultado(casa):
    """Exibe o bras√£o e a descri√ß√£o da casa selecionada."""
    casas_info = {
        "Grifin√≥ria": {
            "brasao": "https://i.imgur.com/tS2vY_d.png",
            "descricao": "Parab√©ns! Voc√™ pertence √† Grifin√≥ria, a casa dos bravos de cora√ß√£o, onde a ousadia, o nervo e o cavalheirismo prevalecem. Sua coragem √© a sua maior virtude!"
        },
        "Sonserina": {
            "brasao": "https://i.imgur.com/m26gC_d.png",
            "descricao": "Parab√©ns! Voc√™ pertence √† Sonserina, a casa dos astutos e ambiciosos. Voc√™ usa de qualquer meio para atingir os fins que estabeleceu e valoriza a grandeza."
        },
        "Corvinal": {
            "brasao": "https://i.imgur.com/dAzpY_d.png",
            "descricao": "Parab√©ns! Voc√™ pertence √† Corvinal, a casa das mentes mais agu√ßadas. Para os de grande esp√≠rito e saber, a intelig√™ncia e a criatividade s√£o tesouros."
        },
        "Lufa-Lufa": {
            "brasao": "https://i.imgur.com/BDei8_d.png",
            "descricao": "Parab√©ns! Voc√™ pertence √† Lufa-Lufa, onde seus membros s√£o justos e leais. Pacientes, sinceros e sem medo da dor, a dedica√ß√£o √© sua marca registrada."
        }
    }
    info = casas_info[casa]
    st.header(f"Sua casa √©... {casa}!")
    st.image(info["brasao"], width=200)
    st.success(info["descricao"])
    st.balloons()
    time.sleep(3) # Pausa para os bal√µes aparecerem bem

# --- INICIALIZA√á√ÉO DO SESSION STATE ---
if 'question_index' not in st.session_state:
    st.session_state.question_index = 0
    st.session_state.scores = {"Grifin√≥ria": 0, "Sonserina": 0, "Corvinal": 0, "Lufa-Lufa": 0}

# --- L√ìGICA PRINCIPAL DO APP ---
st.title("üßô‚Äç‚ôÇÔ∏è Chap√©u Seletor de Hogwarts")

# Verifica se o quiz j√° terminou
if st.session_state.question_index < len(perguntas):
    # Pega a pergunta atual
    idx = st.session_state.question_index
    pergunta_atual = perguntas[idx]

    st.subheader(f"Pergunta {idx + 1}/{len(perguntas)}")
    st.write(f"### {pergunta_atual['pergunta']}")

    # Cria o radio button para as op√ß√µes
    # A chave (key) √© importante para o Streamlit identificar o widget
    resposta = st.radio(
        "Escolha sua resposta:",
        pergunta_atual['opcoes'],
        key=f"q{idx}"
    )

    # Bot√£o de pr√≥xima pergunta
    if st.button("Pr√≥xima Pergunta"):
        # Calcula os pontos da resposta escolhida
        pontos_da_resposta = pergunta_atual['pontos'].get(resposta, {})
        for casa, ponto in pontos_da_resposta.items():
            st.session_state.scores[casa] += ponto

        # Avan√ßa para a pr√≥xima pergunta
        st.session_state.question_index += 1
        st.rerun() # Re-executa o script para mostrar a pr√≥xima pergunta

else:
    # Se o quiz terminou, mostra o resultado
    st.write("### O Chap√©u Seletor ponderou suas respostas...")
    
    with st.spinner("Hmm, dif√≠cil, muito dif√≠cil... mas j√° sei onde coloc√°-lo..."):
        time.sleep(3) # Simula o pensamento do chap√©u

    # Encontra a casa com a maior pontua√ß√£o
    casa_final = max(st.session_state.scores, key=st.session_state.scores.get)
    exibir_resultado(casa_final)

    # Bot√£o para recome√ßar o quiz
    if st.button("Fazer o teste novamente"):
        # Reseta o estado da sess√£o
        st.session_state.question_index = 0
        st.session_state.scores = {"Grifin√≥ria": 0, "Sonserina": 0, "Corvinal": 0, "Lufa-Lufa": 0}
        st.rerun()